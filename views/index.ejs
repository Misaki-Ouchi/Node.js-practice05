<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>商品一覧ページ</title>
        <link rel="stylesheet" href="/css/style.css">
    </head>
    <body>
        <div class="container">
            <h1>商品一覧</h1>
            <!-- ソートのセレクトボックス -->
            <select name="" id="sortSelect">
                <option value="デフォルト">デフォルト</option>
                <option value="商品価格高い順">商品価格高い順</option>
                <option value="商品価格低い順">商品価格低い順</option>
                <option value="商品名50音">商品名50音</option>
                <option value="レビューの評価順">レビューの評価順</option>
                <option value="レビューの多い順">レビューの多い順</option>
            </select>
            <div id="items">
            </div>
        </div>
        <script>
            // データ取得
            const reviews = JSON.parse('<%= JSON.stringify(reviews) %>'.replace(/&#34;/g, '"'))
            const goods = JSON.parse('<%= JSON.stringify(goods) %>'.replace(/&#34;/g, '"'))
            // 商品価格高い順
            const goodsPriceDesc = JSON.parse('<%= JSON.stringify(goodsPriceDesc) %>'.replace(/&#34;/g, '"'))
            // 商品価格低い順
            const goodsPriceAsc = JSON.parse('<%= JSON.stringify(goodsPriceAsc) %>'.replace(/&#34;/g, '"'))
            // 商品名50音
            const goodsName = JSON.parse('<%= JSON.stringify(goodsName) %>'.replace(/&#34;/g, '"'))

            // DOM取得
            const items = document.querySelector('#items')
            const sortSelect = document.querySelector('#sortSelect')

            // ソート用リスト
            let newList = []
            let aveSort = []
            let totalSort = []

            // DOM(#itemsの中)に表示
            function listToDom() {
                items.innerHTML = ''
                newList.forEach(item => {
                    // レビュー平均・数
                    let itemCount = []
                    for (let i = 0; i < reviews.length; i++) {
                        if (reviews[i].itemId === item.id) {
                            itemCount.push(reviews[i].evaluation)
                        }
                    }
                    let sum = 0
                    let len = itemCount.length
                    for (let i = 0; i < len; i++) {
                        sum += itemCount[i];
                    }
                    let ave = sum / len
                    let aveR = (Math.round(ave * 10)) / 10
                    if (sum === 0) {
                        aveR = 0
                    }
                    // DOMに表示
                    items.insertAdjacentHTML('beforeend', `
                    <div class="item">
                        <a href="/itemList/${item.id}">
                            <img class="itemImg" src="/img/item${item.id}.jpg" alt="${item.name}">
                            <div class="itemDetails">
                                <div>
                                    <!-- 商品名 -->
                                    <p>${item.name}</p>
                                </div>
                                <div>
                                    <!-- 商品価格 -->
                                    <p class="itemPrice">${item.price.toLocaleString()}円</p>
                                    <!-- レビューの平均値(レビュー数) -->
                                    <p class="review">
                                        レビュー平均：<img class="reviewStar" src="/img/re.svg" alt="星"><span class="reviewAve">${aveR}</span>
                                        (<span class="reviewTotal">${len}</span>)
                                    </p>
                                </div>
                            </div>
                        </a>
                    </div>
                    `)
                })
            }

            // ソート機能
            // 並び替えセレクト時
            function sortFunc() {
                newList = []
                if (sortSelect.value === 'デフォルト') {
                    newList = goods
                }
                if (sortSelect.value === '商品価格高い順') {
                    newList = goodsPriceDesc
                }
                if (sortSelect.value === '商品価格低い順') {
                    newList = goodsPriceAsc
                }
                if (sortSelect.value === '商品名50音') {
                    newList = goodsName
                }
                if (sortSelect.value === 'レビューの評価順') {
                    newList = goods.slice().sort((a, b) => b.revAve - a.revAve)
                }
                if (sortSelect.value === 'レビューの多い順') {
                    newList = goods.slice().sort((a, b) => b.revTotal - a.revTotal)
                }
                listToDom()
            }
            function getReview() {
                // レビュー評価平均・合計値を取得
                const reviewAve = document.querySelectorAll('.reviewAve')
                const reviewTotal = document.querySelectorAll('.reviewTotal')
                for (let i = 0; i < goods.length; i++) {
                    goods[i].revAve = reviewAve[i].innerHTML
                    goods[i].revTotal = reviewTotal[i].innerHTML
                }
            }
            
            window.addEventListener('load', sortFunc)
            window.addEventListener('load', getReview)
            sortSelect.addEventListener('change', sortFunc)
        </script>
    </body>
</html>
