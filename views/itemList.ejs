<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title><%= goodsItem[0].name %></title>
        <link rel="stylesheet" href="/css/style.css">
    </head>
    <body>
        <form action="/" method="post">
            <div class="itemList_item">
                <!-- 商品画像 -->
                <img class="itemList_itemImg itemImg" src="/img/item<%=goodsItem[0].id %>.jpg" alt="<%=goodsItem[0].name %>">
                <div class="itemList_itemDetails">
                    <!-- 商品名 -->
                    <p class="itemList_itemName"><%= goodsItem[0].name %></p>
                    <!-- 商品価格 -->
                    <p class="itemList_itemPrice itemPrice"><%=goodsItem[0].price.toLocaleString() %>円</p>
                </div>
            </div>
            <!-- 商品id取得 -->
            <input style="display: none;" type="text" name="id" value="<%= goodsItem[0].id %>">
            <div class="shopBtn">
                <!-- 個数 -->
                <!-- <input type="number" min="1" step="1" name="num" value="1"> -->
                <!-- 買い物カゴへ入れるボタン -->
                <button id="addBtn">買い物かごへ追加</button>
                <a class="toShopBask" href="/shopBask">買い物かごへ移動</a>
            </div>
        </form>

        <div id="reviews">
            <p class="reviewTitle">レビュー</p>
            <!-- レビューソート用セレクトボックス -->
            <span>並び替え：</span><select id="reviewSort">
                <option value="デフォルト">デフォルト</option>
                <option value="レビューの評価が高い順">レビューの評価が高い順</option>
                <option value="レビューの評価が低い順">レビューの評価が低い順</option>
            </select>
            <!-- レビューの内容一覧 -->
            <div id="reviewList">
            </div>
        </div>

        <script>
            // データの取得
            const goodsItem = JSON.parse('<%= JSON.stringify(goodsItem) %>'.replace(/&#34;/g, '"'))
            const reviews = JSON.parse('<%= JSON.stringify(reviews) %>'.replace(/&#34;/g, '"'))
            const rev = reviews.filter(elm => {
                return elm.itemId === goodsItem[0].id
            })

            // レビュー評価順リスト
            const reviewsDesc = JSON.parse('<%= JSON.stringify(reviewsDesc) %>'.replace(/&#34;/g, '"'))
            const revDesc = reviewsDesc.filter(elm => {
                return elm.itemId === goodsItem[0].id
            })
            const reviewsAsc = JSON.parse('<%= JSON.stringify(reviewsAsc) %>'.replace(/&#34;/g, '"'))
            const revAsc = reviewsAsc.filter(elm => {
                return elm.itemId === goodsItem[0].id
            })
            // ソート用
            let sortedRevs = []

            // DOMの取得
            const reviewList = document.querySelector('#reviewList')
            const reviewSort = document.querySelector('#reviewSort')

            // レビューの一覧表示
            function listToDom() {
                reviewList.innerHTML = '';
                sortedRevs.forEach(function (value) {
                    reviewList.insertAdjacentHTML('beforeend', `
                            <div class="card">
                                <div class="star">
                                    <img class="star_img" src="/img/re.svg" alt="">
                                    <span>${value.evaluation}</span>
                                </div>
                                <div class="content">
                                    <span>${value.content}</span>
                                </div>
                                <div class="person">
                                    <p>（<span>${value.userId}</span>）</p>
                                </div>
                            </div>
                        `)
                })
            }
            // レビューソート
            function reviewSortFunc() {
                sortedRevs = []
                if (reviewSort.value === "デフォルト") {
                    sortedRevs = rev;
                }
                if (reviewSort.value === "レビューの評価が高い順") {
                    sortedRevs = revDesc;
                }
                if (reviewSort.value === "レビューの評価が低い順") {
                    sortedRevs = revAsc;
                }
                listToDom()
            }

            window.addEventListener('load', reviewSortFunc)
            reviewSort.addEventListener('change', reviewSortFunc)

        </script>
    </body>
</html>
